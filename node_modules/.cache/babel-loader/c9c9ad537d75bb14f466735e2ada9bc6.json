{"remainingRequest":"/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/node_modules/babel-loader/lib/index.js!/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/node_modules/eslint-loader/index.js??ref--13-0!/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/src/core/services/store/breadcrumbs.module.js","dependencies":[{"path":"/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/src/core/services/store/breadcrumbs.module.js","mtime":1595045714587},{"path":"/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/node_modules/cache-loader/dist/cjs.js","mtime":1594863441194},{"path":"/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/node_modules/babel-loader/lib/index.js","mtime":1594863441191},{"path":"/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/node_modules/eslint-loader/index.js","mtime":1594863450993}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvZGF2aWRmZWxpcGVwZWRyYXphcnViaWFuby9Eb2N1bWVudHMvWW5zaXR1L3luc2l0dS9kZW1vMS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9Vc2Vycy9kYXZpZGZlbGlwZXBlZHJhemFydWJpYW5vL0RvY3VtZW50cy9ZbnNpdHUveW5zaXR1L2RlbW8xL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9Vc2Vycy9kYXZpZGZlbGlwZXBlZHJhemFydWJpYW5vL0RvY3VtZW50cy9ZbnNpdHUveW5zaXR1L2RlbW8xL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwoKdmFyIF9hY3Rpb25zLCBfbXV0YXRpb25zOwoKLy8gYWN0aW9uIHR5cGVzCmV4cG9ydCB2YXIgQVBQRU5EX0JSRUFEQ1JVTSA9ICJhcHBlbmRCcmVhZGNydW1iIjsgLy8gbXV0YXRpb24gdHlwZXMKCmV4cG9ydCB2YXIgU0VUX0JSRUFEQ1JVTUIgPSAic2V0QnJlYWRjcnVtYiI7CmV4cG9ydCB2YXIgQUREX0JSRUFEQ1JVTUIgPSAiYWRkQnJlYWRjcnVtYiI7CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogewogICAgYnJlYWRjcnVtYnM6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICAvKioNCiAgICAgKiBHZXQgbGlzdCBvZiBicmVhZGNydW1icyBmb3IgY3VycmVudCBwYWdlDQogICAgICogQHBhcmFtIHN0YXRlDQogICAgICogQHJldHVybnMgeyp9DQogICAgICovCiAgICBicmVhZGNydW1iczogZnVuY3Rpb24gYnJlYWRjcnVtYnMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmJyZWFkY3J1bWJzOwogICAgfSwKCiAgICAvKioNCiAgICAgKiBHZXQgdGhlIHBhZ2UgdGl0bGUNCiAgICAgKiBAcGFyYW0gc3RhdGUNCiAgICAgKiBAcmV0dXJucyB7Kn0NCiAgICAgKi8KICAgIHBhZ2VUaXRsZTogZnVuY3Rpb24gcGFnZVRpdGxlKHN0YXRlKSB7CiAgICAgIHZhciBsYXN0ID0gc3RhdGUuYnJlYWRjcnVtYnNbc3RhdGUuYnJlYWRjcnVtYnMubGVuZ3RoIC0gMV07CgogICAgICBpZiAobGFzdCAmJiBsYXN0LnRpdGxlKSB7CiAgICAgICAgcmV0dXJuIGxhc3QudGl0bGU7CiAgICAgIH0KICAgIH0KICB9LAogIGFjdGlvbnM6IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFNFVF9CUkVBRENSVU1CLCBmdW5jdGlvbiAoc3RhdGUsIHBheWxvYWQpIHsKICAgIHN0YXRlLmNvbW1pdChTRVRfQlJFQURDUlVNQiwgcGF5bG9hZCk7CiAgfSksIF9kZWZpbmVQcm9wZXJ0eShfYWN0aW9ucywgQUREX0JSRUFEQ1JVTUIsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgaWYgKF90eXBlb2YocGF5bG9hZCkgPT09ICJvYmplY3QiKSB7CiAgICAgIHBheWxvYWQuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBzdGF0ZS5jb21taXQoQVBQRU5EX0JSRUFEQ1JVTSwgaXRlbSk7CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgc3RhdGUuY29tbWl0KEFQUEVORF9CUkVBRENSVU0sIHBheWxvYWQpOwogICAgfQogIH0pLCBfYWN0aW9ucyksCiAgbXV0YXRpb25zOiAoX211dGF0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgQVBQRU5EX0JSRUFEQ1JVTSwgZnVuY3Rpb24gKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5icmVhZGNydW1icyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUuYnJlYWRjcnVtYnMpLCBbcGF5bG9hZF0pOwogIH0pLCBfZGVmaW5lUHJvcGVydHkoX211dGF0aW9ucywgU0VUX0JSRUFEQ1JVTUIsIGZ1bmN0aW9uIChzdGF0ZSwgcGF5bG9hZCkgewogICAgc3RhdGUuYnJlYWRjcnVtYnMgPSBwYXlsb2FkOwogIH0pLCBfbXV0YXRpb25zKQp9Ow=="},{"version":3,"sources":["/Users/davidfelipepedrazarubiano/Documents/Ynsitu/ynsitu/demo1/src/core/services/store/breadcrumbs.module.js"],"names":["APPEND_BREADCRUM","SET_BREADCRUMB","ADD_BREADCRUMB","state","breadcrumbs","getters","pageTitle","last","length","title","actions","payload","commit","forEach","item","mutations"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,IAAMA,gBAAgB,GAAG,kBAAzB,C,CAEP;;AACA,OAAO,IAAMC,cAAc,GAAG,eAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,eAAvB;AAEP,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GADM;AAIbC,EAAAA,OAAO,EAAE;AACP;;;;;AAKAD,IAAAA,WANO,uBAMKD,KANL,EAMY;AACjB,aAAOA,KAAK,CAACC,WAAb;AACD,KARM;;AAUP;;;;;AAKAE,IAAAA,SAfO,qBAeGH,KAfH,EAeU;AACf,UAAII,IAAI,GAAGJ,KAAK,CAACC,WAAN,CAAkBD,KAAK,CAACC,WAAN,CAAkBI,MAAlB,GAA2B,CAA7C,CAAX;;AACA,UAAID,IAAI,IAAIA,IAAI,CAACE,KAAjB,EAAwB;AACtB,eAAOF,IAAI,CAACE,KAAZ;AACD;AACF;AApBM,GAJI;AA0BbC,EAAAA,OAAO,4CAMJT,cANI,YAMYE,KANZ,EAMmBQ,OANnB,EAM4B;AAC/BR,IAAAA,KAAK,CAACS,MAAN,CAAaX,cAAb,EAA6BU,OAA7B;AACD,GARI,6BAeJT,cAfI,YAeYC,KAfZ,EAemBQ,OAfnB,EAe4B;AAC/B,QAAI,QAAOA,OAAP,MAAmB,QAAvB,EAAiC;AAC/BA,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAAAC,IAAI;AAAA,eAAIX,KAAK,CAACS,MAAN,CAAaZ,gBAAb,EAA+Bc,IAA/B,CAAJ;AAAA,OAApB;AACD,KAFD,MAEO;AACLX,MAAAA,KAAK,CAACS,MAAN,CAAaZ,gBAAb,EAA+BW,OAA/B;AACD;AACF,GArBI,YA1BM;AAiDbI,EAAAA,SAAS,gDACNf,gBADM,YACYG,KADZ,EACmBQ,OADnB,EAC4B;AACjCR,IAAAA,KAAK,CAACC,WAAN,gCAAwBD,KAAK,CAACC,WAA9B,IAA2CO,OAA3C;AACD,GAHM,+BAINV,cAJM,YAIUE,KAJV,EAIiBQ,OAJjB,EAI0B;AAC/BR,IAAAA,KAAK,CAACC,WAAN,GAAoBO,OAApB;AACD,GANM;AAjDI,CAAf","sourcesContent":["// action types\r\nexport const APPEND_BREADCRUM = \"appendBreadcrumb\";\r\n\r\n// mutation types\r\nexport const SET_BREADCRUMB = \"setBreadcrumb\";\r\nexport const ADD_BREADCRUMB = \"addBreadcrumb\";\r\n\r\nexport default {\r\n  state: {\r\n    breadcrumbs: []\r\n  },\r\n  getters: {\r\n    /**\r\n     * Get list of breadcrumbs for current page\r\n     * @param state\r\n     * @returns {*}\r\n     */\r\n    breadcrumbs(state) {\r\n      return state.breadcrumbs;\r\n    },\r\n\r\n    /**\r\n     * Get the page title\r\n     * @param state\r\n     * @returns {*}\r\n     */\r\n    pageTitle(state) {\r\n      let last = state.breadcrumbs[state.breadcrumbs.length - 1];\r\n      if (last && last.title) {\r\n        return last.title;\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    /**\r\n     * Set the breadcrumbs list\r\n     * @param state\r\n     * @param payload\r\n     */\r\n    [SET_BREADCRUMB](state, payload) {\r\n      state.commit(SET_BREADCRUMB, payload);\r\n    },\r\n\r\n    /**\r\n     * Add breadcrumb\r\n     * @param state\r\n     * @param payload\r\n     */\r\n    [ADD_BREADCRUMB](state, payload) {\r\n      if (typeof payload === \"object\") {\r\n        payload.forEach(item => state.commit(APPEND_BREADCRUM, item));\r\n      } else {\r\n        state.commit(APPEND_BREADCRUM, payload);\r\n      }\r\n    }\r\n  },\r\n  mutations: {\r\n    [APPEND_BREADCRUM](state, payload) {\r\n      state.breadcrumbs = [...state.breadcrumbs, payload];\r\n    },\r\n    [SET_BREADCRUMB](state, payload) {\r\n      state.breadcrumbs = payload;\r\n    }\r\n  }\r\n};\r\n"]}]}